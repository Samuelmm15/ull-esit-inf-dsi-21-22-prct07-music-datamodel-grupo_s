{"/mnt/c/Users/uSer/Desktop/3º informatica/segundo cuatri/DSI/Digitalizando la colección de música de los abuelos/ull-esit-inf-dsi-21-22-prct07-music-datamodel-grupo_s/p7/src/modi30_03.ts":{"path":"/mnt/c/Users/uSer/Desktop/3º informatica/segundo cuatri/DSI/Digitalizando la colección de música de los abuelos/ull-esit-inf-dsi-21-22-prct07-music-datamodel-grupo_s/p7/src/modi30_03.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":66}},"2":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"3":{"start":{"line":14,"column":12},"end":{"line":14,"column":59}},"4":{"start":{"line":16,"column":8},"end":{"line":16,"column":41}},"5":{"start":{"line":22,"column":8},"end":{"line":22,"column":29}},"6":{"start":{"line":30,"column":8},"end":{"line":30,"column":43}},"7":{"start":{"line":33,"column":0},"end":{"line":33,"column":36}},"8":{"start":{"line":43,"column":8},"end":{"line":43,"column":56}},"9":{"start":{"line":44,"column":8},"end":{"line":46,"column":11}},"10":{"start":{"line":45,"column":12},"end":{"line":45,"column":51}},"11":{"start":{"line":53,"column":8},"end":{"line":53,"column":47}},"12":{"start":{"line":60,"column":8},"end":{"line":60,"column":36}},"13":{"start":{"line":67,"column":8},"end":{"line":67,"column":45}},"14":{"start":{"line":70,"column":0},"end":{"line":70,"column":62}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":18},"end":{"line":8,"column":21}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":25},"end":{"line":17,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":22},"end":{"line":23,"column":5}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":29},"end":{"line":31,"column":5}},"line":29},"4":{"name":"(anonymous_4)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":33},"end":{"line":47,"column":5}},"line":42},"5":{"name":"(anonymous_5)","decl":{"start":{"line":44,"column":32},"end":{"line":44,"column":33}},"loc":{"start":{"line":44,"column":50},"end":{"line":46,"column":9}},"line":44},"6":{"name":"(anonymous_6)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":34},"end":{"line":54,"column":5}},"line":52},"7":{"name":"(anonymous_7)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":25},"end":{"line":61,"column":5}},"line":59},"8":{"name":"(anonymous_8)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":24},"end":{"line":68,"column":5}},"line":66}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},{"start":{"line":13,"column":8},"end":{"line":15,"column":9}}],"line":13}},"s":{"0":1,"1":1,"2":3,"3":1,"4":3,"5":6,"6":0,"7":1,"8":2,"9":2,"10":2,"11":2,"12":2,"13":0,"14":1},"f":{"0":1,"1":3,"2":6,"3":0,"4":2,"5":2,"6":2,"7":2,"8":0},"b":{"0":[1,2]},"inputSourceMap":{"version":3,"file":"/mnt/c/Users/uSer/Desktop/3º informatica/segundo cuatri/DSI/Digitalizando la colección de música de los abuelos/ull-esit-inf-dsi-21-22-prct07-music-datamodel-grupo_s/p7/src/modi30_03.ts","sources":["/mnt/c/Users/uSer/Desktop/3º informatica/segundo cuatri/DSI/Digitalizando la colección de música de los abuelos/ull-esit-inf-dsi-21-22-prct07-music-datamodel-grupo_s/p7/src/modi30_03.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,MAAa,YAAY;IAKvB,gBAAuB,CAAC;IACxB;;MAEE;IACK,MAAM,CAAC,WAAW;QACvB,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;YAC9B,YAAY,CAAC,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;SAChD;QACD,OAAO,YAAY,CAAC,YAAY,CAAC;IACnC,CAAC;IACD;;MAEE;IACK,eAAe;QACpB,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;IACvB,CAAC;IACD;;;;OAIG;IACH,kBAAkB,CAAC,CAAS,EAAE,CAAS;QACrC,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC;CACF;AA7BD,oCA6BC;AACD;;EAEE;AACF,MAAa,yBAAyB;IAKpC;;;MAGE;IACF,YAAY,eAAoB;QAC9B,IAAI,CAAC,eAAe,GAAG,IAAI,GAAG,CAAC,eAAe,CAAC,CAAC;QAChD,eAAe,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE;YACvC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IACD;;;QAGI;IACG,eAAe,CAAC,YAAe;QACpC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IACzC,CAAC;IACD;;;MAGE;IACK,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IACD;;;MAGE;IACK,CAAC,MAAM,CAAC,QAAQ,CAAC;QACtB,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;IACvC,CAAC;CACF;AApCD,8DAoCC","sourcesContent":["/**\n * Genera un número aleatorio entre 0 y 1\n */\nexport class RandomNumber {\n  /**\n    * @private metodo privado static que almacena la única instancia que va a tener dicha clase\n  */\n  private static RandomNumber: RandomNumber;\n  private constructor() {}\n  /**\n    * @returns {RandomNumber} devuelve la única instancia de la clase\n  */\n  public static getInstance(): RandomNumber {\n    if (!RandomNumber.RandomNumber) {\n      RandomNumber.RandomNumber = new RandomNumber();\n    }\n    return RandomNumber.RandomNumber;\n  }\n  /**\n    * @returns {number} devuelve un número aleatorio entre 0 y 1\n  */\n  public getRandomNumber(): number {\n    return Math.random();\n  }\n  /**\n   * @param n numero mas pequeño\n   * @param m numero mas grande\n   * @returns un número aleatorio entre min (incluido) y max (excluido)\n   */\n  getRandomArbitrary(n: number, m: number): number {\n    return Math.random() * (m - n) + n;\n  }\n}\n/**\n  * Genera un conjunto de números aleatorios\n*/\nexport class RandomNumberSetCollection<T> implements Iterable<T> {\n  /**\n    * @private metodo privado que almacena el conjunto de números aleatorios\n    */\n  private randomNumberSet: Set<T>;\n  /**\n    * Guarda los números aleatorios en un conjunto Set de randomNumberSet\n    * @param randomNumberSet Conjunto de números aleatorios\n  */\n  constructor(randomNumberSet: T[]) {\n    this.randomNumberSet = new Set(randomNumberSet);\n    randomNumberSet.forEach((randomNumber) => {\n      this.randomNumberSet.add(randomNumber);\n    });\n  }\n  /**\n    * Añade un número aleatorio al conjunto\n    * @param randomNumber Número aleatorio a añadir al conjunto\n    */\n  public addRandomNumber(randomNumber: T): void {\n    this.randomNumberSet.add(randomNumber);\n  }\n  /**\n    * retorna el conjunto de números aleatorios\n    * @returns {Set<T>} devuelve el conjunto de números aleatorios\n  */\n  public getRandomNumberSet(): Set<T> {\n    return this.randomNumberSet;\n  }\n  /**\n    * retorna un iterador sobre el conjunto de números aleatorios\n    * @returns {Iterator<T>} devuelve un iterador sobre el conjunto de números aleatorios\n  */\n  public [Symbol.iterator](): Iterator<T> {\n    return this.randomNumberSet.values();\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c97f9e2d6c4f5d3348f76afc8b2ba50263f06850","contentHash":"31dd9f3344c33d00006c7fa783e8d70262443093f068de6fe3762b486832e05f"}}